 Row to Column Zero

Problem Description

You are given a 2D integer matrix A, make all the elements in a row or column zero if the A[i][j] = 0. Specifically, make entire ith row and jth column zero.



Problem Constraints

1 <= A.size() <= 103

1 <= A[i].size() <= 103

0 <= A[i][j] <= 103



Input Format

First argument is a vector of vector of integers.(2D matrix).



Output Format

Return a vector of vector after doing required operations.



Example Input

Input 1:

[1,2,3,4]
[5,6,7,0]
[9,2,0,4]


Example Output

Output 1:

[1,2,0,0]
[0,0,0,0]
[0,0,0,0]


Example Explanation

Explanation 1:

A[2][4] = A[3][3] = 0, so make 2nd row, 3rd row, 3rd column and 4th column zero


class Solution:
    # @param A : list of list of integers
    # @return a list of list of integers
    def solve(self, A):
        m, n, eleZero = len(A), len(A[0]), not all(A[0])
        for i in range(1, m):
            for j in range(n):
                if A[i][j] == 0:
                    A[0][j] = A[i][0] = 0
        # Set the zeros
        for i in range(1, m):
            for j in range(n - 1, -1, -1):
                if A[i][0] == 0 or A[0][j] == 0:
                    A[i][j] = 0
        # Set the zeros for the first row
        if eleZero:
            A[0] = [0] * n
        return A
